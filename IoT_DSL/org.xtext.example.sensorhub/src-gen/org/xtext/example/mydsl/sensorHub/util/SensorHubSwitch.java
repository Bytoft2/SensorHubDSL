/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.sensorHub.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.mydsl.sensorHub.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.sensorHub.SensorHubPackage
 * @generated
 */
public class SensorHubSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static SensorHubPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SensorHubSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = SensorHubPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case SensorHubPackage.SENSOR_SYSTEM:
      {
        SensorSystem sensorSystem = (SensorSystem)theEObject;
        T result = caseSensorSystem(sensorSystem);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.DEVICE:
      {
        Device device = (Device)theEObject;
        T result = caseDevice(device);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.FOG:
      {
        Fog fog = (Fog)theEObject;
        T result = caseFog(fog);
        if (result == null) result = caseDevice(fog);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.RASP_PI:
      {
        RaspPi raspPi = (RaspPi)theEObject;
        T result = caseRaspPi(raspPi);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.STORAGE:
      {
        Storage storage = (Storage)theEObject;
        T result = caseStorage(storage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.VISUALIZER:
      {
        Visualizer visualizer = (Visualizer)theEObject;
        T result = caseVisualizer(visualizer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.EDGE:
      {
        Edge edge = (Edge)theEObject;
        T result = caseEdge(edge);
        if (result == null) result = caseDevice(edge);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.ARDUINO:
      {
        Arduino arduino = (Arduino)theEObject;
        T result = caseArduino(arduino);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.COM:
      {
        Com com = (Com)theEObject;
        T result = caseCom(com);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.NRF24L01:
      {
        Nrf24l01 nrf24l01 = (Nrf24l01)theEObject;
        T result = caseNrf24l01(nrf24l01);
        if (result == null) result = caseCom(nrf24l01);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.SENSOR:
      {
        Sensor sensor = (Sensor)theEObject;
        T result = caseSensor(sensor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.WATER_LEVEL:
      {
        Water_level water_level = (Water_level)theEObject;
        T result = caseWater_level(water_level);
        if (result == null) result = caseSensor(water_level);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.SR04:
      {
        Sr04 sr04 = (Sr04)theEObject;
        T result = caseSr04(sr04);
        if (result == null) result = caseSensor(sr04);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.SOUND:
      {
        Sound sound = (Sound)theEObject;
        T result = caseSound(sound);
        if (result == null) result = caseSensor(sound);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.PRE_PROCESSOR:
      {
        PreProcessor preProcessor = (PreProcessor)theEObject;
        T result = casePreProcessor(preProcessor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.AVERAGE:
      {
        Average average = (Average)theEObject;
        T result = caseAverage(average);
        if (result == null) result = casePreProcessor(average);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SensorHubPackage.THRESHOLD:
      {
        Threshold threshold = (Threshold)theEObject;
        T result = caseThreshold(threshold);
        if (result == null) result = casePreProcessor(threshold);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sensor System</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sensor System</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSensorSystem(SensorSystem object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Device</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Device</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDevice(Device object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fog</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fog</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFog(Fog object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rasp Pi</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rasp Pi</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRaspPi(RaspPi object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Storage</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Storage</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStorage(Storage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Visualizer</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Visualizer</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVisualizer(Visualizer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Edge</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Edge</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEdge(Edge object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Arduino</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Arduino</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseArduino(Arduino object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Com</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Com</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCom(Com object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Nrf24l01</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Nrf24l01</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNrf24l01(Nrf24l01 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sensor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sensor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSensor(Sensor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Water level</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Water level</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWater_level(Water_level object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sr04</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sr04</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSr04(Sr04 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sound</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sound</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSound(Sound object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pre Processor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pre Processor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePreProcessor(PreProcessor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Average</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Average</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAverage(Average object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Threshold</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Threshold</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseThreshold(Threshold object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //SensorHubSwitch
