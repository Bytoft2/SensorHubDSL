/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.sensorHub.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.sensorHub.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SensorHubFactoryImpl extends EFactoryImpl implements SensorHubFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static SensorHubFactory init()
  {
    try
    {
      SensorHubFactory theSensorHubFactory = (SensorHubFactory)EPackage.Registry.INSTANCE.getEFactory(SensorHubPackage.eNS_URI);
      if (theSensorHubFactory != null)
      {
        return theSensorHubFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new SensorHubFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SensorHubFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case SensorHubPackage.SENSOR_SYSTEM: return createSensorSystem();
      case SensorHubPackage.DEVICE: return createDevice();
      case SensorHubPackage.FOG: return createFog();
      case SensorHubPackage.RASP_PI: return createRaspPi();
      case SensorHubPackage.STORAGE: return createStorage();
      case SensorHubPackage.VISUALIZER: return createVisualizer();
      case SensorHubPackage.EDGE: return createEdge();
      case SensorHubPackage.ARDUINO: return createArduino();
      case SensorHubPackage.COM: return createCom();
      case SensorHubPackage.NRF24L01: return createNrf24l01();
      case SensorHubPackage.SENSOR: return createSensor();
      case SensorHubPackage.WATER_LEVEL: return createWater_level();
      case SensorHubPackage.SR04: return createSr04();
      case SensorHubPackage.SOUND: return createSound();
      case SensorHubPackage.PRE_PROCESSOR: return createPreProcessor();
      case SensorHubPackage.AVERAGE: return createAverage();
      case SensorHubPackage.THRESHOLD: return createThreshold();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SensorSystem createSensorSystem()
  {
    SensorSystemImpl sensorSystem = new SensorSystemImpl();
    return sensorSystem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Device createDevice()
  {
    DeviceImpl device = new DeviceImpl();
    return device;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Fog createFog()
  {
    FogImpl fog = new FogImpl();
    return fog;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RaspPi createRaspPi()
  {
    RaspPiImpl raspPi = new RaspPiImpl();
    return raspPi;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Storage createStorage()
  {
    StorageImpl storage = new StorageImpl();
    return storage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Visualizer createVisualizer()
  {
    VisualizerImpl visualizer = new VisualizerImpl();
    return visualizer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Edge createEdge()
  {
    EdgeImpl edge = new EdgeImpl();
    return edge;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Arduino createArduino()
  {
    ArduinoImpl arduino = new ArduinoImpl();
    return arduino;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Com createCom()
  {
    ComImpl com = new ComImpl();
    return com;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Nrf24l01 createNrf24l01()
  {
    Nrf24l01Impl nrf24l01 = new Nrf24l01Impl();
    return nrf24l01;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sensor createSensor()
  {
    SensorImpl sensor = new SensorImpl();
    return sensor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Water_level createWater_level()
  {
    Water_levelImpl water_level = new Water_levelImpl();
    return water_level;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sr04 createSr04()
  {
    Sr04Impl sr04 = new Sr04Impl();
    return sr04;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sound createSound()
  {
    SoundImpl sound = new SoundImpl();
    return sound;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PreProcessor createPreProcessor()
  {
    PreProcessorImpl preProcessor = new PreProcessorImpl();
    return preProcessor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Average createAverage()
  {
    AverageImpl average = new AverageImpl();
    return average;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Threshold createThreshold()
  {
    ThresholdImpl threshold = new ThresholdImpl();
    return threshold;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SensorHubPackage getSensorHubPackage()
  {
    return (SensorHubPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static SensorHubPackage getPackage()
  {
    return SensorHubPackage.eINSTANCE;
  }

} //SensorHubFactoryImpl
